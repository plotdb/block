// Generated by LiveScript 1.3.1
var lc, transport;
lc = {
  active: null
};
document.addEventListener('click', function(e){
  var p, range;
  p = ld$.parent(e.target, '[editable]');
  if (lc.active === p) {
    return;
  }
  if (lc.active) {
    lc.active.setAttribute('contenteditable', false);
  }
  lc.active = p;
  if (!p) {
    return;
  }
  p.setAttribute('contenteditable', true);
  ld$.find(p, '[editable]').map(function(it){
    return it.setAttribute('contenteditable', false);
  });
  range = caretRange({
    node: p,
    x: e.clientX,
    y: e.clientY
  });
  return setCaret(range.range);
});
transport = function(opt){
  var json0, this$ = this;
  opt == null && (opt = {});
  this.opt = opt;
  this.root = opt.root;
  this.output = opt.output;
  this.state = {
    old: {},
    cur: {},
    tree: {}
  };
  if (!json0) {
    json0 = require("ot-json0");
  }
  root.addEventListener('input', function(){
    var ret;
    ret = serialize(root);
    this$.state.old = this$.state.cur;
    this$.state.cur = ret;
    ret = json0OtDiff(this$.state.old, this$.state.cur);
    ret = json0.type.apply(this$.state.tree, ret);
    return deserialize(this$.state.tree).then(function(arg$){
      var node;
      node = arg$.node;
      this.output.innerHTML = "";
      return this.output.appendChild(node);
    });
  });
  return this;
};
transport({
  root: ld$.find('#input', 0),
  output: ld$.find('#output', 0)
});