// Generated by LiveScript 1.3.1
var dragging, draggingCaret, draggingSrc, ghost, dragBox, node, draggingRender;
dragging = false;
draggingCaret = null;
draggingSrc = null;
ghost = new Image();
ghost.src = "data:image/svg+xml," + encodeURIComponent("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"15\" viewBox=\"0 0 20 15\">\n  <rect x=\"0\" y=\"0\" width=\"20\" height=\"15\" fill=\"rgba(0,0,0,.5)\"/>\n</svg>");
ld$.find('[draggable]').map(function(n){
  n.setAttribute('draggable', true);
  return n.addEventListener('dragstart', function(e){
    console.log(n);
    draggingSrc = n;
    e.dataTransfer.setData('application/json', JSON.stringify({}));
    e.dataTransfer.setDragImage(ghost, 10, 10);
    dragging = true;
    return e.stopPropagation();
  });
});
ld$.find('[editable]').map(function(n){
  n.addEventListener('drop', function(e){
    var data;
    data = JSON.parse(e.dataTransfer.getData('application/json'));
    dragging = false;
    return e.preventDefault();
  });
  return n.addEventListener('dragover', function(e){
    return e.preventDefault();
  });
});
dragBox = document.createElement("div");
import$(dragBox.style, {
  position: 'fixed',
  left: 0,
  top: 0,
  opacity: 0,
  border: '2px solid #f0f',
  pointerEvents: 'none',
  transition: "opacity .15s ease-in-out"
});
document.body.appendChild(dragBox);
node = ld$.find('#input', 0);
document.addEventListener('drop', function(e){
  var n, sc, so, ta;
  if (!((n = draggingSrc) && draggingCaret)) {
    return;
  }
  sc = draggingCaret.startContainer;
  so = draggingCaret.startOffset;
  ta = sc.nodeType === Element.TEXT_NODE
    ? sc
    : sc.childNodes[so];
  if (ld$.parent(ta, null, n)) {
    return;
  }
  n.parentNode.removeChild(n);
  ta.parentNode.insertBefore(n, ta);
  return draggingRender(null);
});
draggingRender = function(range){
  var ref$, box;
  draggingCaret = range;
  if (!range) {
    return ref$ = dragBox.style, ref$.opacity = 0, ref$;
  } else {
    box = range.getBoundingClientRect();
    return import$(dragBox.style, {
      left: box.x + "px",
      top: box.y + "px",
      width: '1px',
      height: box.height + "px",
      opacity: 1
    });
  }
};
document.addEventListener('dragover', function(e){
  var ret;
  if (!dragging) {
    return;
  }
  ret = caretRange({
    node: node,
    x: e.clientX,
    y: e.clientY
  });
  return draggingRender(ret.range);
});
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}