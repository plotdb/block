// Generated by LiveScript 1.3.1
var highlightbox, highlighted, highlightRender, highlightView;
highlightbox = document.createElement('div');
highlighted = null;
import$(highlightbox.style, {
  position: 'fixed',
  top: 0,
  left: 0,
  zIndex: 9999,
  pointerEvents: 'none',
  opacity: 0,
  transition: "all .15s ease-in-out",
  animation: "highlight 1s infinite"
});
highlightRender = function(node){
  var ref$, box, p;
  highlighted = node;
  if (!node) {
    return ref$ = highlightbox.style, ref$.opacity = 0, ref$;
  }
  box = node.getBoundingClientRect();
  p = 6;
  return ref$ = highlightbox.style, ref$.left = (box.x - p) + "px", ref$.top = (box.y - p) + "px", ref$.width = (box.width + p * 2) + "px", ref$.height = (box.height + p * 2) + "px", ref$.opacity = 0.5, ref$.border = '3px solid #2be', ref$.borderRadius = '5px', ref$;
};
document.body.appendChild(highlightbox);
document.addEventListener('mouseover', function(e){
  var node;
  if (!(node = ld$.parent(e.target, '[editable]'))) {
    return;
  }
  return highlightRender(node);
});
console.log(1);
highlightView = new ldView({
  root: ld$.find('[ld-scope=highlight]', 0),
  action: {
    click: {
      'highlight-delete': function(){
        if (!(highlighted && highlighted.parentNode)) {
          return;
        }
        highlighted.parentNode.removeChild(highlighted);
        highlighted = null;
        return highlightRender();
      },
      'highlight-clone': function(){
        if (!(highlighted && highlighted.parentNode)) {
          return;
        }
        highlighted.parentNode.removeChild(highlighted);
        highlighted = null;
        return highlightRender();
      }
    }
  }
});
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}