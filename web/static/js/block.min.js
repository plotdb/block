function import$(e,r){var n={}.hasOwnProperty;for(var t in r)n.call(r,t)&&(e[t]=r[t]);return e}var blockManager,block;blockManager={hash:{},add:function(e){var r,n,t,o;return r=e.name,n=e.version,t=e.block,((o=this.hash)[r]||(o[r]={}))[n]=t},get:function(e){var r,n,t,o,i=this;return null==e&&(e={}),r=[e.name,e.version],n=r[0],t=r[1],n&&t?null!=((r=this.hash)[n]||(r[n]={}))[t]?this.hash[n][t]?Promise.resolve(this.hash[n][t]):Promise.reject(new Error(new ldError(404))):(o={dependency:[e]},o={name:e.name,version:e.version},ld$.fetch("/block",{method:"POST"},{json:o,type:"json"}).then(function(e){var r;return null==e&&(e={}),e.name&&e.version?(i.add({name:e.name,version:e.version,block:r=new block(e)}),r):Promise.reject(new ldError(1015))})):Promise.reject(new ldError(1015))}},(block=function(e){var r;return null==e&&(e={}),this.opt=e,this.name=e.name,e.root?this.tree=serialize(e.root):e.files&&e.files["index.html"]&&((r=document.createElement("div")).innerHTML=e.files["index.html"],this.tree=serialize(r)),blockManager.add(name,this),this}).prototype=import$(Object.create(Object.prototype),{instantiate:function(e){return deserialize(null!=e?e:this.tree)}});